{
    "title":"4 Design Principles",
    "subtitle":"by Kent Beck"
}

${slide:title="Dady" Kent Beck}$

${columns}$

${column:width=50}$

- Extreme Programming
- Agile Manifesto
- Test-Driven Development

${column:width=50}$

+.>file://figures/Kent_Beck.jpg|width=100+

${endColumns}$

${slide:title=The 4 Design Principles}$

#Passes the tests
#Reveals intention
#No duplication
#Fewest elements

${slide:title=I. Passes the Tests}$

- Your code must work as intended
- Tests make sure that's always true

${slide:title=II. Reveals Intention}$

- Code must be easy to understand
- always remember that:
-- you spend most of your time reading/browsing code
-- if you can't understand, you can't modify

${slide:title=III. No duplication (''aka.'' D.R.Y.)}$

- ""D""on't ""R""epeat ""Y""ourself
- Say things "Once and only once"
- Create abstractions

${slide:title=IV. Fewest Elements (''aka.'' no over-engineering)}$

- Don't design future requirements
- You don't know what you will need tomorrow, don't design for it today
- This only makes code harder to change

${slide:title=The 4 Design Principles}$

#Passes the tests
#Reveals intention
#No duplication
#Fewest elements